# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  DOCKER_PLATFORMS: linux/amd64,linux/arm64,linux/arm
  EXPENSE_TRACKING_API_CODE_PATH: src/api
  EXPENSE_TRACKING_API_IMAGE_NAME: ${{ github.repository_owner }}/expense-tracking-api
  EXPENSE_TRACKING_API_DOCKERFILE_PATH: ./src/api/Dockerfile
  EXPENSE_TRACKING_UI_CODE_PATH: src/expense-tracking-ui
  EXPENSE_TRACKING_UI_IMAGE_NAME: ${{ github.repository_owner }}/expense-tracking-ui
  EXPENSE_TRACKING_UI_DOCKERFILE_PATH: ./src/expense-tracking-ui/Dockerfile

jobs:
  api-build-and-test:
    defaults:
      run:
        working-directory: ${{ env.EXPENSE_TRACKING_API_CODE_PATH }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
#    - name: Test
#      run: dotnet test --no-build --verbosity normal
  api-build-and-push-image:
    needs: api-build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.EXPENSE_TRACKING_API_IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: ${{ env.EXPENSE_TRACKING_API_DOCKERFILE_PATH }}
          context: ${{ env.EXPENSE_TRACKING_API_CODE_PATH }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  ui-build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.EXPENSE_TRACKING_UI_IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: ${{ env.EXPENSE_TRACKING_UI_DOCKERFILE_PATH }}
          context: ${{ env.EXPENSE_TRACKING_UI_CODE_PATH }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
